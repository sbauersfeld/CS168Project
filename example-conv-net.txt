# set up conv net TODO: Set up correct parameters, cnn network, regularization, etc
    # batch_size = 10
    # epochs = 20
    # input_shape = (IMAGE_HEIGHT,IMAGE_WIDTH,NUM_SCANS)
    # fazeka_model = Sequential()

    # change to conv3d?
    # fazeka_model.add(Conv2D(32, kernel_size=(3, 3),activation='linear',input_shape=(IMAGE_HEIGHT,IMAGE_WIDTH,NUM_SCANS),padding='same'))
    # fazeka_model.add(LeakyReLU(alpha=0.1))
    # fazeka_model.add(MaxPooling2D((2, 2),padding='same'))
    # fazeka_model.add(Conv2D(64, (3, 3), activation='linear',padding='same'))
    # fazeka_model.add(LeakyReLU(alpha=0.1))
    # fazeka_model.add(MaxPooling2D(pool_size=(2, 2),padding='same'))
    # fazeka_model.add(Conv2D(128, (3, 3), activation='linear',padding='same'))
    # fazeka_model.add(LeakyReLU(alpha=0.1))                  
    # fazeka_model.add(MaxPooling2D(pool_size=(2, 2),padding='same'))
    # fazeka_model.add(Flatten())
    # fazeka_model.add(Dense(128, activation='linear'))
    # fazeka_model.add(LeakyReLU(alpha=0.1))                  
    # fazeka_model.add(Dense(NUM_CLASSES, activation='softmax'))

    # # compile the model
    # fazeka_model.compile(loss=keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adam(),metrics=['accuracy'])
    # fazeka_model.summary()

    # # train the model
    # fashion_train = fazeka_model.fit(train_input, train_output, batch_size=batch_size,epochs=epochs,verbose=1,validation_data=(valid_X, valid_label))

    # # test the model
    # test_eval = fazeka_model.evaluate(test_input, test_output, verbose=0)
    # print('Test loss:', test_eval[0])
    # print('Test accuracy:', test_eval[1])   

    # another possible option
    # input_shape = (IMAGE_HEIGHT,IMAGE_WIDTH,NUM_SCANS,1)
    # fazeka_model = Sequential()
    # fazeka_model.add(Conv3D(32, kernel_size=(3, 3, 1), activation='relu', input_shape=input_shape))
    # fazeka_model.add(Conv3D(32, kernel_size=(3, 3, 1), activation='relu'))
    # fazeka_model.add(MaxPooling3D(pool_size=(2, 2, 1)))

    # fazeka_model.add(Dropout(0.25))
    # fazeka_model.add(Conv3D(64, kernel_size=(3, 3, 1), activation='relu'))
    # fazeka_model.add(Conv3D(64, kernel_size=(3, 3, 1), activation='relu'))
    # fazeka_model.add(MaxPooling3D(pool_size=(2, 2, 1)))
    # fazeka_model.add(Dropout(0.25))
    # # fazeka_model.add(Flatten())
    # # fazeka_model.add(GlobalMaxPooling3D())
    # fazeka_model.add(Dense(256, activation='relu'))
    # fazeka_model.add(Dense(NUM_CLASSES, activation='softmax'))

    # fazeka_model.compile(loss=keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adam(),metrics=['accuracy'])
    # fazeka_model.summary()

    # use resnet?
    # inputs = Input(shape=input_shape)